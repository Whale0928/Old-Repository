.flex-container{
    height: 700px;
    background-color: steelblue;
    
    /* item(내부 요소)을 감싸는 요소의 형식을 flex로 변경
        -> item에 자동으로 지정되어 있는 margin 요소가 모두 사라지고
        content 영역만큼으 ㅣ크기만 가지게 된다.
    */
    display: flex;

    /* item에 별도의 height가 지정되어 있지 않다면
       item의 높이은  flex-container의 높이 / 너비와 같아지게 된다
       (flex-container 정렬 방향에 따라 다름.) */ 


    /*================== */
    /*||flex-direction|| */
    /*================== */

    /* (flex-container 전용 속성)
        main axis의 방향 시작위치를 지정하는 속성
    */
    /* 행방향(가로, 기본값) */
    flex-direction: row;
    
    /* 행방향(가로, 역방향) */
    /* flex-direction: row-reverse; */

    /* 열 뱡향 (세로) */
    /* flex-direction: column; */
    
    /* 열 뱡향 (세로 , 역방향) */
    /* flex-direction: column-reverse; */


    /*================== */
    /*||flex-wrap|| */
    /*================== */

    /* 내부 item 들을 포장 
        item들이 강제로 한줄에 배치되게 할 것인지
        
        container아 줄어들면 한 줄을 벗어나 여러 줄로 배치할 것인지 지정*/

    /* item 한줄로 배칭(기본값) */
    /* flex-wrap: nowrap; */

    /* item 여러 줄로 배칭 */
    /* flex-wrap: wrap; */

    /* item 한줄로 배칭(뒤에서 부터 배치) */
    /* flex-wrap: wrap-reverse; */



    /*================== */
    /*||flex-flow|| */
    /*================== */
    /* flex-container의 
        main axis의 방향 순서와 
        여러 줄로 배치할지에 대한 여부를 한번에 설정하는 속성
        flex-direction + flex-wrap이 합쳐진 모양 
     */
    /*     flex-direction    flec-wrap */
    /* flex-flow:row-reverse  wrap */
    /* flex-flow: row wrap; */


    /* ---------------------- */
    /*   justify - content    */
    /* ---------------------- */

    /* justify : 조정하다  

        -> main axis 방향으로 item(내용)의 정렬방법을 조정
    */

    /* 중심축 시작 지점을 기준으로 정렬. */
    /* justify-content: flex-start; */

    /* 중심축 시작 지점을 기준으로 정렬. */
    /*     justify-content: flex-start ; */

    /* 순서가 달라지는 
    flex-direction : row-reverse와 구분해서 기억하자 */
    /*flex-direction: column; */

    /* main axis 가운데 정렬  */
    /* justify-content:center; */

    /* 
        일정한 크기의 공간을 추가한다.
        [특징:양 끝은 조금, item 중간은 넑게 떨어져 있다] */
        /* justify-content: space-around; */
        
        /* item 주위에 main axis 내에서 '동일한' 간격을 가지게 된다.*/
        /* justify-content: space-evenly; */
        
        /* space-evenly에서 양끝은 flex-main axis에 붙게함 */
        /* justify-content: space-between; */


        
    /* ---------------------- */
    /*   aling-items    */
    /* ---------------------- */
      
    /* item들을 cross axis(반대축 교차축)방향으로 정렬하는 방법을 지정하는 속성 */

    /* item들의 너비 또는 높이를  
        corss axis 방향으로 늘려서 
        flex-container와 같은 크기를 가지도록 함(기본값)
        
        조건:item에 cross axis 방향의 크기 지정 속성이 없어야 한다.*/
    /* align-items: stretch; */

    /* cross axis 시작 지점을 기준
    (Stretch 처럼 늘어나지 않고 , content 크기만큼 유지) */
    /* align-items: flex-start; */


    /* cross axis 끝 부분 기준으로 정렬. */
    /* align-items: flex-end; */
    
    /* cross axis 가운데 부분 기준으로 정렬. */
    /* align-items: center; */

    /* item 내부 content가 모두 한 줄에 배치 될 수 있도록
        item 요소를 cross axis으로 움직이는 설정 */
    align-items: baseline;
}

.item2{padding: 10px;}
.item3{padding: 20px;}
.item4{padding: 30px;}


/* 요소 정가운데 배치하기 */
#con{
    width: 450px;
    height: 450px;
    background-color: green;
 
    display: flex;
    /* 중심축 설정 */
    flex-direction: row;

    /* flex-container 초과시 여러줄로 출력 x(한줄로만) */

    /* 중심축 방향 가운데 정렬*/
    justify-content: center;
    
    /* 교차축 방향 가운데 정렬*/
    align-items: center;
    
}
#center{
    width: 80px;
    height: 80px;
    background-color: steelblue;
    
}